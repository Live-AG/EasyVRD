
#Область ОбработчикиСобытийФормы


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьПоМетаданным();
	УстановитьЗначенияПоУмолчанию();
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы


&НаКлиенте
Процедура ПубликоватьДистрибутивПриИзменении(Элемент)
	
	Элементы.ПанельРасположенияДистрибутива.Доступность = ПубликоватьДистрибутив;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьOpenIDПриИзменении(Элемент)
	
	Если ИспользоватьOpenID Тогда
		ИспользоватьКакOpenIDПровайдера = Ложь;
	КонецЕсли;
	
	ДоступностьЭлементовOpenID();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКакOpenIDПровайдераПриИзменении(Элемент)
	
	Если ИспользоватьКакOpenIDПровайдера Тогда
		ИспользоватьOpenID = Ложь;
	КонецЕсли;
	
	ДоступностьЭлементовOpenID();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтладкаПриИзменении(Элемент)
	
	Если Отладка = 2 Тогда 
		Элементы.АдресОтладчика.Заголовок = "Адрес сервера отладки HTTP";
	Иначе
		Элементы.АдресОтладчика.Заголовок = "Адрес отладчика";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыОсновнаяПриСменеСтраницы(Элемент, ТекущаяСтраница) 
	
	Если ТекущаяСтраница = Элементы.СтраницаDefaultVRD Тогда
		ЗаполнитьDefaulVRD_НаСервере();
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыРазделителиДанных


&НаКлиенте
Процедура РазделителиДанныхЗначениеЗаданоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.РазделителиДанных.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		Если ТекущиеДанные.ЗначениеЗадано = Ложь Тогда
			ТекущиеДанные.Значение = "";
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазделителиДанныхЗначениеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.РазделителиДанных.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		Если ТекущиеДанные.Значение <> "" Тогда
			ТекущиеДанные.ЗначениеЗадано = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиКомандФормы


&НаКлиенте
Процедура ОтметитьВсеЭлементы(Команда)
	
	Если Элементы.СтраницыСервисы.ТекущаяСтраница = Элементы.СтраницаWebСервисы Тогда
		УстановитьПометкуВсехWebСервисов(Истина);
	ИначеЕсли Элементы.СтраницыСервисы.ТекущаяСтраница = Элементы.СтраницаHTTPСервисы Тогда
		УстановитьПометкуВсехHTTPСервисов(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметкуВсехЭлементов(Команда)
	
	Если Элементы.СтраницыСервисы.ТекущаяСтраница = Элементы.СтраницаWebСервисы Тогда
		УстановитьПометкуВсехWebСервисов(Ложь);
	ИначеЕсли Элементы.СтраницыСервисы.ТекущаяСтраница = Элементы.СтраницаHTTPСервисы Тогда
		УстановитьПометкуВсехHTTPСервисов(Ложь);
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции


&НаСервере
Процедура УстановитьЗначенияПоУмолчанию()

	ПубликоватьДоступ					= Истина;
	ПубликоватьOData					= Истина;
	ПубликоватьАналитику				= Истина;
	ПубликоватьWebСервисыПоУмолчанию	= Истина;
	ПубликоватьWebСервисы				= Истина;
	
	КоличествоСоединений			= 10000;
	ВремяЖизниСоединений			= 1200;
	СоединениеЧислоПопыток			= 5;
	СоединениеВремяОжидания		= 500;
	СоединениеВремяМеджуПопытками	= 1000;
	СоединениеТаймаутПроверки		= 15000;
	СоединениеПериодПроверки		= 3000; 
	
	ВремяЖизниАутентификации		= 604800;

КонецПроцедуры // УстановитьЗначенияПоУмолчанию()

&НаСервере
Функция ЗаполнитьПоМетаданным()

	Для Каждого WebСервис Из Метаданные.WebСервисы Цикл
		СтрокаWebСервиса = WebСервисы.Добавить();
		СтрокаWebСервиса.Активность	= Истина;
		СтрокаWebСервиса.ИмяСервиса	= WebСервис.Имя;
		СтрокаWebСервиса.Адрес		= WebСервис.ИмяФайлаПубликации;
	КонецЦикла; 
	
	Для Каждого HTTPСервис Из Метаданные.HTTPСервисы Цикл
		СтрокаHTTPСервиса = HTTPСервисы.Добавить();
		СтрокаHTTPСервиса.Активность	= Истина;
		СтрокаHTTPСервиса.ИмяСервиса	= HTTPСервис.Имя;
		СтрокаHTTPСервиса.URL			= HTTPСервис.КорневойURL;
	КонецЦикла;
	
	Для Каждого ОбщийРеквизит Из Метаданные.ОбщиеРеквизиты Цикл
		Если ОбщийРеквизит.РазделениеДанных = Метаданные.СвойстваОбъектов.РазделениеДанныхОбщегоРеквизита.Разделять Тогда
			РазделительДанных = РазделителиДанных.Добавить();
			РазделительДанных.ИмяРазделителя = ОбщийРеквизит.Имя;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

&НаСервере
Функция ПроверкаЗаполненияПолей()

	//TODO: Выполнить проверку
	Возврат Истина;

КонецФункции // ПроверкаЗаполненияПолей()

&НаСервере
Функция ПолучитьДанныеФормыВСтруктуру()
	
	// Создаем структуру для хранения данных
	ДанныеФормы = Новый Структура();
	
	// Основные реквизиты
	ДанныеФормы.Вставить("ИмяБазы",			ИмяБазы);
	ДанныеФормы.Вставить("ВебСервер",			ВебСервер);
	ДанныеФормы.Вставить("Каталог",			Каталог);
	ДанныеФормы.Вставить("ПубликоватьДоступ",	ПубликоватьДоступ);
	ДанныеФормы.Вставить("ПубликоватьOData",	ПубликоватьOData);
	ДанныеФормы.Вставить("ПубликоватьАналитику",	ПубликоватьАналитику);
	
	// Web-сервисы
	ДанныеФормы.Вставить("ПубликоватьWebСервисыПоУмолчанию",	ПубликоватьWebСервисыПоУмолчанию);
	ДанныеФормы.Вставить("ПубликоватьWebСервисы",			ПубликоватьWebСервисы);
	ДанныеФормы.Вставить("ПубликоватьWebСервисыРасширений",	ПубликоватьWebСервисыРасширений);
	
	// HTTP-сервисы
	ДанныеФормы.Вставить("ПубликоватьHTTPСервисы",			ПубликоватьHTTPСервисы);
	ДанныеФормы.Вставить("ПубликоватьHTTPСервисыРасширений",	ПубликоватьHTTPСервисыРасширений);
	
	// Дистрибутив
	ДанныеФормы.Вставить("ПубликоватьДистрибутив", ПубликоватьДистрибутив);
	
	// Дополнительные поля
	ДанныеФормы.Вставить("ИмяВебПриложения",	ИмяВебПриложения);
	ДанныеФормы.Вставить("АдресПерехода",		АдресПерехода);
	
	// OpenID
	ДанныеФормы.Вставить("ИспользоватьOpenID",				ИспользоватьOpenID);
	ДанныеФормы.Вставить("АдресOpenIDПровайдера",			АдресOpenIDПровайдера);
	ДанныеФормы.Вставить("ИспользоватьКакOpenIDПровайдера",	ИспользоватьКакOpenIDПровайдера);
	ДанныеФормы.Вставить("ВремяЖизниАутентификации",			ВремяЖизниАутентификации);
	
	// Прочие настройки
	ДанныеФормы.Вставить("КаталогВременныхФайлов",	КаталогВременныхФайлов);
	ДанныеФормы.Вставить("ФоновыеЗадания",			ФоновыеЗадания);
	ДанныеФормы.Вставить("Отладка",				Отладка);
	ДанныеФормы.Вставить("АдресОтладчика",			АдресОтладчика);
	
	// Соединения
	ДанныеФормы.Вставить("КоличествоСоединений",				КоличествоСоединений);
	ДанныеФормы.Вставить("ВремяЖизниСоединений",			ВремяЖизниСоединений);
	ДанныеФормы.Вставить("СоединениеЧислоПопыток",			СоединениеЧислоПопыток);
	ДанныеФормы.Вставить("СоединениеВремяОжидания",			СоединениеВремяОжидания);
	ДанныеФормы.Вставить("СоединениеВремяМеджуПопытками",	СоединениеВремяМеджуПопытками);
	ДанныеФормы.Вставить("СоединениеТаймаутПроверки",		СоединениеТаймаутПроверки);
	ДанныеФормы.Вставить("СоединениеПериодПроверки",			СоединениеПериодПроверки);
	
	// Получаем табличные части в виде массива структур
	ДанныеФормы.Вставить("WebСервисы",						ПолучитьДанныеТабличнойЧасти(WebСервисы.Выгрузить()));
	ДанныеФормы.Вставить("HTTPСервисы",					ПолучитьДанныеТабличнойЧасти(HTTPСервисы.Выгрузить()));
	ДанныеФормы.Вставить("РасположенияДистрибутива",			ПолучитьДанныеТабличнойЧасти(РасположенияДистрибутива.Выгрузить()));
	ДанныеФормы.Вставить("РазрешенныеАдресаПереадресации",	РазрешенныеАдресаПереадресации.ВыгрузитьЗначения());
	ДанныеФормы.Вставить("РазделителиДанных",				ПолучитьДанныеТабличнойЧасти(РазделителиДанных.Выгрузить()));
	
	// Возвращаем структуру с данными
	Возврат ДанныеФормы;
	
КонецФункции

&НаСервере
Функция ПолучитьДанныеТабличнойЧасти(ТабличнаяЧасть)
	
	МассивСтрок = Новый Массив();
	
	Для Каждого СтрокаТаблицы Из ТабличнаяЧасть Цикл
		СтруктураСтроки = Новый Структура();
		
		// Получаем все колонки табличной части
		Для Каждого Колонка Из ТабличнаяЧасть.Колонки Цикл
			ИмяКолонки = Колонка.Имя;
			СтруктураСтроки.Вставить(ИмяКолонки, СтрокаТаблицы[ИмяКолонки]);
		КонецЦикла;
		
		МассивСтрок.Добавить(СтруктураСтроки);
	КонецЦикла;
	
	Возврат МассивСтрок;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьDefaulVRD_НаСервере()

	Если Не ПроверкаЗаполненияПолей() Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеЗаполнения = ПолучитьДанныеФормыВСтруктуру();
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	СтрокаXML = ОбработкаОбъект.СформироватьДанныеXML(ДанныеЗаполнения);
	
	ТекстНастройки.УстановитьТекст(СтрокаXML);

КонецПроцедуры // ЗаполнитьDefaulVRD_НаСервере()

&НаКлиенте
Процедура ДоступностьЭлементовOpenID()

	Элементы.АдресOpenIDПровайдера.Доступность			= ИспользоватьOpenID;
	Элементы.ВремяЖизниАутентификации.Доступность			= ИспользоватьКакOpenIDПровайдера;
	Элементы.РазрешенныеАдресаПереадресации.Доступность	= ИспользоватьКакOpenIDПровайдера;

КонецПроцедуры // ДоступностьЭлементовOpenID()

&НаКлиенте
Процедура УстановитьПометкуВсехWebСервисов(Пометка)

	Для Каждого WebСервис Из WebСервисы Цикл
		WebСервис.Активность = Пометка;
	КонецЦикла;

КонецПроцедуры // УстановитьПометкуВсехWebСервисов(Пометка)

&НаКлиенте
Процедура УстановитьПометкуВсехHTTPСервисов(Пометка)

	Для Каждого HTTPСервис Из HTTPСервисы Цикл
		HTTPСервис.Активность = Пометка;
	КонецЦикла;

КонецПроцедуры // УстановитьПометкуВсехWebСервисов(Пометка)


#КонецОбласти



